{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","console","log","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","divRoot","document","getElementById","ReactDOM","render"],"mappings":"mMAIaA,EAAe,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEbC,mBAAS,IAFI,mBAE1CC,EAF0C,KAE9BC,EAF8B,KAqBjD,OACI,sBAAMC,SAba,SAAEC,GAErBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BC,QAAQC,IAAIR,GACZF,GAAc,SAAAW,GAAI,OAAMT,GAAN,mBAAsBS,OACxCR,EAAc,MAMlB,SACI,uBACIS,KAAM,OACNC,MAAQX,EACRY,SAtBa,SAAET,GACvBF,EAAeE,EAAEU,OAAOF,a,+BCTnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,8DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YACrB,CACIC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCDCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEZhB,mBAAS,CACjCuB,KAAM,GACNa,SAAS,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAqBxC,OAdAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAO,SAAAC,GAEJH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAAEpB,IAEEqB,EDfmBK,CAAc1B,GAAhCO,EAJ6B,EAI7BA,KAAMa,EAJuB,EAIvBA,QAQd,OACI,sBAAKJ,UAAU,aAAf,UACI,mCAAMhB,EAAN,OAEEoB,GAAW,4CAEb,6BAEQb,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAESA,GADCA,EAAIC,aEvBzBgB,EAAe,WAAO,IAAD,EAEM3C,mBAAU,CAAE,cAFlB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAU9B,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQ6C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAWA,GADLA,YClBxB6B,G,MAAUC,SAASC,eAAe,SAExCC,IAASC,OACP,cAAC,EAAD,IACAJ,K","file":"static/js/main.38e92e93.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport Proptypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory =  ( { setCategories } ) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputValue = ( e ) => {\r\n        setinputValue( e.target.value )\r\n        \r\n    }\r\n\r\n    const handleOnSubmit = ( e ) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            console.log(inputValue);\r\n            setCategories(cats => [ inputValue, ... cats, ]);\r\n            setinputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleOnSubmit }>\r\n            <input\r\n                type= \"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputValue }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: Proptypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=5&api_key=srmcd41bZU6tj8kyKSJd82EDOLirMmha`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => (\r\n        {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    ));\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const { data, loading } = useFetchGifs( category );\r\n\r\n    // Solo se ejecuta la primera vez que el componente es renderizado\r\n    // useEffect( () => { \r\n    //     getGifs( category )\r\n    //         .then( setImages );\r\n    // }, [ category ] );\r\n\r\n    return (\r\n        <div className=\"card-grid \">\r\n            <h2> {category} </h2>\r\n\r\n            { loading && <p>Cargando...</p> }\r\n\r\n            <ol>\r\n                {\r\n                    data.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />  \r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [ state, setState ] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then(  imgs  => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                })\r\n\r\n            });\r\n\r\n    }, [ category ] );\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState( [ 'Star wars' ] );    \r\n\r\n    // const handleAdd = (  ) => {\r\n    //     // setCategories( [ ...categories, 'hola soy goku' ] );\r\n    //     // el set recibe un callback y el primer argumento es el estado anterior de la constante\r\n    //     setCategories( cats => [ ...cats, 'Hola, soy Goku!' ] );\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp.</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr></hr>\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                        key={ category }\r\n                        category={ category }\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nconst divRoot = document.getElementById('root');\n\nReactDOM.render(\n  <GifExpertApp />,\n  divRoot\n);\n\n"],"sourceRoot":""}